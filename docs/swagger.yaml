basePath: /
definitions:
  domain.CreateKVRequest:
    properties:
      key:
        type: string
        example: "test-key-1"
      value:
        type: string
        example: "{\"name\":\"Alice\",\"age\":30,\"email\":\"alice@example.com\",\"tags\":[\"user\",\"admin\"],\"active\":true}"
    required:
    - key
    - value
    type: object
  domain.DeleteKVRequest:
    properties:
      soft_delete:
        description: true для soft delete
        type: boolean
        example: false
    type: object
  domain.KV:
    properties:
      created_at:
        type: string
        example: "2024-01-15T10:30:00Z"
      deleted_at:
        type: string
        example: null
      is_deleted:
        type: boolean
        example: false
      key:
        type: string
        example: "test-key-1"
      updated_at:
        type: string
        example: "2024-01-15T10:30:00Z"
      value:
        type: string
        example: "{\"name\":\"Alice\",\"age\":30,\"email\":\"alice@example.com\",\"tags\":[\"user\",\"admin\"],\"active\":true}"
    type: object
  domain.ListKVResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/domain.KV'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  domain.UpdateKVRequest:
    properties:
      value:
        type: string
        example: "{\"name\":\"Bob\",\"age\":25,\"email\":\"bob@example.com\",\"tags\":[\"user\"],\"active\":false}"
    required:
    - value
    type: object
  http.HealthResponse:
    properties:
      service:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Modern key-value storage with HTTP API built on Tarantool
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: KV Storage API
  version: "1.0"
paths:
  /api/v1/kv:
    get:
      description: Get a paginated list of key-value pairs from the storage (excluding
        soft-deleted)
      parameters:
      - description: 'Number of items to return (default: 10, max: 100)'
        in: query
        name: limit
        type: integer
      - description: 'Number of items to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.ListKVResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List key-value pairs
      tags:
      - kv
    post:
      consumes:
      - application/json
      description: Create a new key-value pair in the storage. The value field should be a JSON string.
      parameters:
      - description: Key-value pair to create (value should be a JSON string)
        in: body
        name: kv
        required: true
        schema:
          $ref: '#/definitions/domain.CreateKVRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.KV'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new key-value pair
      tags:
      - kv
  /api/v1/kv/{key}:
    delete:
      consumes:
      - application/json
      description: Delete a key-value pair from the storage (hard delete by default,
        soft delete if specified)
      parameters:
      - description: Key to delete
        in: path
        name: key
        required: true
        type: string
      - description: Delete options
        in: body
        name: delete
        schema:
          $ref: '#/definitions/domain.DeleteKVRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.KV'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a key-value pair
      tags:
      - kv
    get:
      description: Retrieve a key-value pair from the storage by its key
      parameters:
      - description: Key to retrieve
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.KV'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a key-value pair by key
      tags:
      - kv
    put:
      consumes:
      - application/json
      description: Update an existing key-value pair in the storage. The value field should be a JSON string.
      parameters:
      - description: Key to update
        in: path
        name: key
        required: true
        type: string
      - description: New value for the key (should be a JSON string)
        in: body
        name: kv
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateKVRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.KV'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a key-value pair
      tags:
      - kv
  /api/v1/kv/{key}/restore:
    post:
      description: Restore a soft-deleted key-value pair
      parameters:
      - description: Key to restore
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.KV'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Restore a soft-deleted key-value pair
      tags:
      - kv
  /api/v1/kv/all:
    get:
      description: Get a paginated list of all key-value pairs including soft-deleted
        ones
      parameters:
      - description: 'Number of items to return (default: 10, max: 100)'
        in: query
        name: limit
        type: integer
      - description: 'Number of items to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.ListKVResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List all key-value pairs including deleted
      tags:
      - kv
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.HealthResponse'
      summary: Health check
      tags:
      - health
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
